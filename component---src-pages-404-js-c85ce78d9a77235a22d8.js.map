{"version":3,"sources":["webpack:///./src/components/images/salem.js","webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Salem","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","style","margin","clipPath","fixed","placeholderImage","childImageSharp","_518472630","NotFoundPage","Fragment","seo","title","display","flexDirection","minHeight","justifyContent","padding","textAlign","background","color","salem","to","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_2824749751_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-c85ce78d9a77235a22d8.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst Salem = () => (\n    <StaticQuery\n        query={graphql`\n            query {\n                placeholderImage: file(relativePath: { eq: \"salem.png\" }) {\n                    childImageSharp {\n                        fixed(width: 300) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <Img\n                style={{ margin: '0 auto', clipPath: 'circle(50% at 50% 50%)' }}\n                fixed={data.placeholderImage.childImageSharp.fixed}\n            />\n        )}\n    />\n);\nexport default Salem;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport SEO from '../components/seo';\nimport Salem from '../components/images/salem';\n\nconst NotFoundPage = () => (\n    <>\n        <SEO title=\"404: Not found\" />\n        <main\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: '100vh',\n                justifyContent: 'center',\n                padding: '0 30px',\n                textAlign: 'center',\n                background: '#121619',\n                color: '#f6f7eb',\n            }}\n        >\n            <Salem />\n            <h1 style={{ color: '#f6f7eb' }}>NOT FOUND</h1>\n            <p>\n                You just hit a route that doesn&#39;t exist... the sadness.\n                Maybe go to the <Link to=\"/\">main page</Link>?\n            </p>\n        </main>\n    </>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    return (\n        <StaticQuery\n            query={graphql`\n                query DefaultSEOQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            description\n                            author\n                        }\n                    }\n                }\n            `}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description;\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                        meta={[\n                            {\n                                name: 'description',\n                                content: metaDescription,\n                            },\n                            {\n                                property: 'og:title',\n                                content: title,\n                            },\n                            {\n                                property: 'og:description',\n                                content: metaDescription,\n                            },\n                            {\n                                property: 'og:type',\n                                content: 'website',\n                            },\n                            {\n                                name: 'twitter:card',\n                                content: 'summary',\n                            },\n                            {\n                                name: 'twitter:creator',\n                                content: data.site.siteMetadata.author,\n                            },\n                            {\n                                name: 'twitter:title',\n                                content: title,\n                            },\n                            {\n                                name: 'twitter:description',\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: 'keywords',\n                                          content: keywords.join(', '),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                );\n            }}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: [],\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}